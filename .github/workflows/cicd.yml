name: GitHub CI

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - main

env:
  PACKAGE_NAME: ansys-tools-common
  MAIN_PYTHON_VERSION: 3.13
  DOCUMENTATION_CNAME: tools.docs.pyansys.com

permissions:
  contents: read

jobs:

  changelog-fragment:
    name: Create changelog fragment
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: ansys/actions/doc-changelog@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  code-style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/code-style@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: Doc style
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/doc-style@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  actions-style:
    name: Actions style
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/check-actions-security@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          generate-summary: true
          token: ${{ secrets.GITHUB_TOKEN }}
          auditing-level: high

  wheelhouse:
    name: Wheelhouse / ${{ matrix.os }} / ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    needs: code-style
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: ansys/actions/build-wheelhouse@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python }}
          whitelist-license-check: termcolor # Has MIT license, but it's not recognized

  tests:
    name: Testing
    runs-on: ubuntu-latest
    needs: wheelhouse
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ['3.10', '3.11', '3.12', '3.13']
    env:
      ANSYS_LOCAL: false
      ON_UBUNTU: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
        with:
          persist-credentials: false

      - name: Set up uv
        uses: astral-sh/setup-uv@eb1897b8dc4b5d5bfe39a428a8f2304605e0983c # 7.0.0
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          enable-cache: false

      - name: Install project dependencies
        run: |
          uv sync --group tests

      - name: Install test package containing entrypoint
        run: |
          uv pip install tests/launcher/pkg_with_entrypoint

      - name: Run tests
        run: |
          uv run pytest

  doc-build:
    name: Build documentation
    needs: doc-style
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/doc-build@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          check-links: false
          group-dependencies-name: doc

  build-library:
    name: Build library
    runs-on: ubuntu-latest
    needs: [doc-build, tests]
    steps:
      - uses: ansys/actions/build-library@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  release:
    name: Release project
    if: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags') }}
    needs: build-library
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ env.PACKAGE_NAME }}-artifacts
          path: ${{ env.PACKAGE_NAME }}-artifacts

      - name: Release to the public PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        with:
          repository-url: https://upload.pypi.org/legacy/
          print-hash: true
          packages-dir: ${{ env.PACKAGE_NAME }}-artifacts
          skip-existing: false

      - name: Release to GitHub
        uses: ansys/actions/release-github@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          library-name: ${{ env.PACKAGE_NAME }}

  doc-deploy-stable:
    name: Deploy stable docs
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: ansys/actions/doc-deploy-stable@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  deploy-changelog:
    name: Deploy changelog
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: doc-deploy-stable
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: ansys/actions/doc-deploy-changelog@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

