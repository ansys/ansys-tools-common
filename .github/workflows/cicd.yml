name: GitHub CI

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main

env:
    PACKAGE_NAME: ansys-tools-common
    MAIN_PYTHON_VERSION: 3.13
    DOCUMENTATION_CNAME: bookish-adventure-16g5prl.pages.github.io

jobs:
    style:
        name: Code style
        runs-on: ubuntu-latest
        steps:
          - name: PyAnsys code style checks
            uses: ansys/actions/code-style@v10
            with:
              python-version: ${{ env.MAIN_PYTHON_VERSION }}
    smoke-tests:
        name: Build and Smoke tests
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: ['3.10', '3.11', '3.12']
        steps:
        - name: Build wheelhouse and perform smoke test
          uses: ansys/actions/build-wheelhouse@v10
          with:
            library-name: ${{ env.PACKAGE_NAME }}
            operating-system: ${{ matrix.os }}
            python-version: ${{ matrix.python-version }}
            whitelist-license-check: "termcolor"  # Has MIT license, but it's not recognized

    build-tests:
      name: Build and Testing
      runs-on: ubuntu-latest
      needs: [smoke-tests]
      env:
        ANSYS_LOCAL: false
        ON_UBUNTU: true

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: ${{ env.MAIN_PYTHON_VERSION }}
            cache: 'pip'

        - name: Install uv and create venv
          run: |
            python -m pip install --upgrade pip
            pip install uv
        - name: Install project dependencies
          run: |
            uv pip install --system .[tests]
            uv pip install --system tests/launcher/pkg_with_entrypoint
        - name: Run tests
          run: |
            python -m pytest

        # - uses: codecov/codecov-action@v5
        #   name: 'Upload coverage to CodeCov'
        #   with:
        #     token: ${{ secrets.CODECOV_TOKEN }}

    doc-build:
      name: Build documentation
      runs-on: ubuntu-latest
      steps:
        - name: Build documentation
          uses: ansys/actions/doc-build@v10
          with:
            python-version: ${{ env.MAIN_PYTHON_VERSION }}
            check-links: false # Delete after first release

    package:
        name: Package library
        runs-on: ubuntu-latest
        needs: [smoke-tests]
        steps:
            - name: Build library source and wheel artifacts
              uses: ansys/actions/build-library@v10
              with:
                library-name: ${{ env.PACKAGE_NAME }}
                python-version: ${{ env.MAIN_PYTHON_VERSION }}

    upload_dev_docs:
      name: Upload dev documentation
      if: github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      needs: [doc-build]
      steps:
        - name: Deploy the latest documentation
          uses: ansys/actions/doc-deploy-dev@v10
          with:
            cname: ${{ env.DOCUMENTATION_CNAME }}
            token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
            bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
            bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}
